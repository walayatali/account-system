[{"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/index.js":"1","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/reportWebVitals.js":"2","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/App.js":"3","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseItem.js":"4","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseDate.js":"5","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/Expenses.js":"6","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/UI/Card.js":"7","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/NewExpense/NewExpense.js":"8","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/NewExpense/ExpenseForm.js":"9","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpensesFilter.js":"10","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpensesList.js":"11","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseChart.js":"12","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Chart/Chart.js":"13","/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Chart/ChartBar.js":"14","/home/syed/reactProjects/training/xprolabs/account-system/src/index.js":"15","/home/syed/reactProjects/training/xprolabs/account-system/src/App.js":"16","/home/syed/reactProjects/training/xprolabs/account-system/src/reportWebVitals.js":"17","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Card.js":"18","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/Login.js":"19","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/LoginForm.js":"20","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Input.js":"21","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/ListAccounts.js":"22","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/auth-context.js":"23","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AccountStatement.js":"24","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Header/NavBar.js":"25","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/Report.js":"26","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/ReportEntry.js":"27","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Modal.js":"28","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AddExpense.js":"29","/home/syed/reactProjects/training/xprolabs/account-system/src/Hooks/useGetData.js":"30","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/report-context.js":"31","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/account-context.js":"32","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AddAccount.js":"33","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/FilterReport.js":"34"},{"size":500,"mtime":1643349806515,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1643349806515,"results":"37","hashOfConfig":"36"},{"size":1014,"mtime":1643715414477,"results":"38","hashOfConfig":"36"},{"size":429,"mtime":1643634498657,"results":"39","hashOfConfig":"36"},{"size":498,"mtime":1643377829720,"results":"40","hashOfConfig":"36"},{"size":971,"mtime":1643714009133,"results":"41","hashOfConfig":"36"},{"size":186,"mtime":1643379931771,"results":"42","hashOfConfig":"36"},{"size":870,"mtime":1643705080627,"results":"43","hashOfConfig":"36"},{"size":1751,"mtime":1643692838318,"results":"44","hashOfConfig":"36"},{"size":674,"mtime":1643625394648,"results":"45","hashOfConfig":"36"},{"size":619,"mtime":1643634695633,"results":"46","hashOfConfig":"36"},{"size":714,"mtime":1643715254728,"results":"47","hashOfConfig":"36"},{"size":483,"mtime":1643715322874,"results":"48","hashOfConfig":"36"},{"size":521,"mtime":1643714702328,"results":"49","hashOfConfig":"36"},{"size":586,"mtime":1645425307049,"results":"50","hashOfConfig":"51"},{"size":2521,"mtime":1646309301529,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1643349806515,"results":"53","hashOfConfig":"51"},{"size":190,"mtime":1645005787970,"results":"54","hashOfConfig":"51"},{"size":242,"mtime":1646734801119,"results":"55","hashOfConfig":"51"},{"size":2783,"mtime":1646046964403,"results":"56","hashOfConfig":"51"},{"size":271,"mtime":1645019484949,"results":"57","hashOfConfig":"51"},{"size":3538,"mtime":1646638131052,"results":"58","hashOfConfig":"51"},{"size":102,"mtime":1645017808579,"results":"59","hashOfConfig":"51"},{"size":651,"mtime":1646109742224,"results":"60","hashOfConfig":"51"},{"size":1111,"mtime":1645695485862,"results":"61","hashOfConfig":"51"},{"size":2304,"mtime":1646303983865,"results":"62","hashOfConfig":"51"},{"size":752,"mtime":1645682858156,"results":"63","hashOfConfig":"51"},{"size":727,"mtime":1644492845141,"results":"64","hashOfConfig":"51"},{"size":3729,"mtime":1645705318051,"results":"65","hashOfConfig":"51"},{"size":1632,"mtime":1645704122126,"results":"66","hashOfConfig":"51"},{"size":106,"mtime":1645461918399,"results":"67","hashOfConfig":"51"},{"size":108,"mtime":1645782385495,"results":"68","hashOfConfig":"51"},{"size":1939,"mtime":1645783895752,"results":"69","hashOfConfig":"51"},{"size":3107,"mtime":1646140499755,"results":"70","hashOfConfig":"51"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"prwk1r",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1960wfv",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/index.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/reportWebVitals.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/App.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseItem.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseDate.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/Expenses.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/UI/Card.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/NewExpense/NewExpense.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/NewExpense/ExpenseForm.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpensesFilter.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpensesList.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Expense/ExpenseChart.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Chart/Chart.js",[],"/home/syed/reactProjects/training/xprolabs/expense-tracker/src/components/Chart/ChartBar.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/index.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/App.js",["152","153","154","155","156"],"import React, { useState, useEffect } from 'react';\nimport Login from './Components/Auth/Login';\nimport ListAccounts from './Components/Accounts/ListAccounts';\nimport AccountStatement from './Components/Accounts/AccountStatement';\nimport AuthContext from './Components/Store/auth-context';\nimport ReportContext from './Components/Store/report-context';\nimport AccountContext from './Components/Store/account-context';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  NavLink,\n  useLocation,\n  useNavigate,\n  Navigate\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [userObj, setUserObj] = useState({email: '', password: ''});\n    const [expenseNotify, setExpenseNotify] = useState({});\n    const [accountNotify, setAccountNotify] = useState({});\n    \n    const authContextObj = {\n        email: userObj.email,\n        password: userObj.password,\n        onSetUser: (email, password) => {\n            setUserObj({email:email, password: password});\n                localStorage.setItem(\"email\", email);\n        }\n    }\n\n    useEffect(() => {\n        const localEmail = localStorage.getItem(\"email\");\n\n        if(localEmail){\n            setUserObj({email:localEmail});\n        }\n        return () => {\n          setUserObj({}); // This worked for me\n        };\n    },[]);\n\n    const logoutHandler = () => {\n        setUserObj({email: '', password: ''});\n        localStorage.removeItem(\"email\");\n\n    }\n\n    const expensesUpdatedObj = {\n        expensesUpdated: expenseNotify,\n        onExpensesUpdate: (val) => {\n            setExpenseNotify(val);\n        }\n    }\n    const accountsUpdatedObj = {\n        accountsUpdated: accountNotify,\n        onAccountsUpdate: (val) => {\n            setAccountNotify(val);\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={authContextObj}>\n            {!(userObj.email) && <Login/>}\n            {(userObj.email) && \n                <ReportContext.Provider value={expensesUpdatedObj}>\n                    <AccountContext.Provider value={accountsUpdatedObj}>    \n                        \n                        <Routes>\n                            <Route path=\"/\" element={<ListAccounts logout={logoutHandler}/>}> \n                                <Route exact path=\"AccountStatement/:accountId\" element={<AccountStatement  />}  />\n                            </Route>\n                        </Routes>\n                    </AccountContext.Provider>\n                </ReportContext.Provider>}\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;","/home/syed/reactProjects/training/xprolabs/account-system/src/reportWebVitals.js",[],["157","158"],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Card.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/Login.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/LoginForm.js",["159","160","161","162","163"],"import React, { useRef, useState, useEffect, useReducer, useContext} from 'react';\nimport classes from './LoginForm.module.css';\nimport Input from '../UI/Input';\nimport AuthContext from '../Store/auth-context';\nimport useGetData from '../../Hooks/useGetData';\n\nconst authReducer = (state, action) => {\n\t\n\tif (action.type == 'FORM_VALIDATE') {\n\t\tif (action.email.trim() === \"\")\n\t\t{\n\t\t\treturn {\n\t\t\t\temail: state.email, password: state.password, valid:false,\n\t\t\t\terror: true, errorMessage: 'Email cannot be empty'\n\t\t\t}\t\n\t\t}\n\t\telse if (action.password.trim() === \"\" || action.password.trim().length < 6)\n\t\t{\n\t\t\treturn {\n\t\t\t\temail: state.email, password: state.password, valid:false,\n\t\t\t\terror: true, errorMessage: 'Password cannot be empty <br> must be atleast 7 chracters'\n\t\t\t}\t\n\t\t}\n\t\telse{\n\n\t\t\treturn { email: action.email, password: action.password, valid: true }\t\t\n\t\t}\n\t} else {\n\t\treturn { email: '', password: '', valid:false }\n\t}\n\n}\n\nfunction LoginForm (props)\t{\n\n\tconst InitialUser = {email: '', password: '', valid: false, error: false, errorMessage: ''};\n\n\tconst emailRef = useRef();\n\tconst passwordRef = useRef();\n\t\n\tconst [authState, dispatch] =  useReducer(authReducer, InitialUser);\n\tconst ctxAuth =  useContext(AuthContext);\n\t\n\tconst [localuser, setLocaluser] = useState({});\n\tconst allKeys = [\"email\", \"password\"];\n\tconst {alldata, dataDepend, fetchDataHandler: sendCredentials} = useGetData(allKeys);\n\t\n\t\n\tconst changeFormHandler = () => {\n\t\tdispatch({type:\"FORM_VALIDATE\", email: emailRef.current.value, password: passwordRef.current.value })\n\t}\n\n\tconst fetchCredentials = (data) => {\n\t\t// console.log(data);\n\t}\n\n\tconst submitHandler = async(e) => {\n\t\te.preventDefault();\n\t\tdispatch({type:\"FORM_VALIDATE\", email: emailRef.current.value, password: passwordRef.current.value })\n\t\tif( authState.valid){\n\t\t\tconst goAuth = async()=> {\n\t\t\t\tawait sendCredentials(`https://expensetracker-706b7-default-rtdb.firebaseio.com/users.json`,\"\", fetchCredentials);\n\t\t\t\tawait ctxAuth.onSetUser(emailRef.current.value, passwordRef.current.value ); \n\n\t\t\t}\n\t\t\t// if(setLocaluser({email: emailRef.current.value, password: passwordRef.current.value })){\n\t\t\t\t// setLocaluser({email: emailRef.current.value, password: passwordRef.current.value });\n\t\t\t// }\n\t\t\tgoAuth();\n\t\t}\n\t}\n\t\n\tuseEffect (() => {\n\t\temailRef.current.focus();\n\t}, []);\n\n\treturn (\n\t\t<form className={classes.form}  onSubmit={submitHandler}>\n\t\t{authState.error && <p className={classes.error}>{authState.errorMessage}</p>}\n\t\t\t<Input  label=\"Email\" ref={emailRef} input={{\n\t\t\t\ttype: \"email\",\n\t\t\t\tonChange: changeFormHandler,\n\t\t\t}}/>\n\t\t\t<Input label=\"Password\" ref={passwordRef} input={{\n\t\t\t\ttype: \"password\",\n\t\t\t\tonChange: changeFormHandler\n\t\t\t}}/>\n\t\t\t<button  type=\"submit\">Login</button>\n\t\t</form>\n\t)\n}\n\nexport default LoginForm;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Input.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/ListAccounts.js",["164","165","166","167","168","169","170","171","172"],"import React, {useState, useEffect, useCallback, useContext} from 'react';\nimport Card from '../UI/Card';\nimport AccountStatement from './AccountStatement';\nimport AddExpense from './AddExpense';\nimport AddAccount from './AddAccount';\nimport NavBar from '../Header/NavBar';\nimport Modal from '../UI/Modal';\nimport useGetData from '../../Hooks/useGetData';\nimport classes from './ListAccounts.module.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  NavLink,\n  useLocation,\n  useNavigate,\n  Navigate,\n  Outlet\n} from \"react-router-dom\";\nimport AccountContext from '../Store/account-context';\n\n\nfunction ListAccounts(props)\t{\n\n\tconst accRep = useContext(AccountContext);\n\tconst { accountsUpdated } = accRep;\n\n\tconst navigate = useNavigate();\n\tlet location = useLocation();\n\tconst currLocation = location.pathname;\n\n\tconst id = currLocation.substring(currLocation.lastIndexOf('/') + 1);\n\n\tconst [accounts, setAccounts] = useState([]);\n\n\tconst[showExpenseModal, setShowExpenseModal] = useState(false);\n\tconst[showAccountModal, setShowAccountModal] = useState(false);\n\t\n\tconst closeExpenseModalHandler = () => {\n        setShowExpenseModal(false);      \n    }\n    const openExpenseModalHandler = () => {\n        setShowExpenseModal(true);      \n    }\n\n    const closeAccountModalHandler = () => {\n        setShowAccountModal(false);      \n    }\n    const openAccountModalHandler = () => {\n        setShowAccountModal(true);      \n    }\n\n    const navigateHandler = (e,logout=false) => {\n        navigate(e);\n        if(logout)\n        {\n        \tprops.logout()\n        }      \n    }\n    const allKeys = ['id','name'];\n   \n    const {alldata, fetchDataHandler: getAccounts} = useGetData(allKeys);\n    \n    const fetchRecords = (accounts) => {\n    \tconst loadedAccounts = [];\n\n      for (const accountKey in accounts) {\n        loadedAccounts.push({ id: accounts[accountKey].id, name: accounts[accountKey].name });\n      }\n\n      setAccounts(loadedAccounts);\n    }\n\n    useEffect(() =>{\n    \tif(typeof accountsUpdated.name !== \"undefined\"){\n  \t\t\tsetAccounts(accounts.concat(accountsUpdated));\n  \t\t}else{\n    \t\tgetAccounts('https://expensetracker-706b7-default-rtdb.firebaseio.com/accounts.json',\"\",fetchRecords);\n    \t}\n    \treturn ()=>{\n    \t\tsetAccounts([]);\n    \t}\n    },[getAccounts, accountsUpdated])\n\n\treturn (\n\n\t\t<>\n\t\t\t{ showAccountModal && \n\t\t\t\t<Modal onClose={closeAccountModalHandler}>\n\t\t\t\t\t<AddAccount onCancel={closeAccountModalHandler}/>\n\t\t\t\t</Modal> \n\t\t\t}\n\t\t\t{ showExpenseModal && \n\t\t\t\t<Modal onClose={closeExpenseModalHandler}>\n\t\t\t\t\t<AddExpense accounts={accounts} id={id} onCancel={closeExpenseModalHandler}/>\n\t\t\t\t</Modal> \n\t\t\t}\n\t\t\t<Card>\n\t\t\t\t<div className={classes.nav_buttons}>\n\t\t\t\t\t<NavBar onClick={() => navigateHandler(\"/\",true)} key=\"logout\" link=\"/\" account={{id:\"logout\", name:\"Logout\"}}/>\n\t\t\t\t\t<NavBar onClick={openAccountModalHandler} key=\"add-account\" link={currLocation} account={{id:\"add-account\", name:\"Add Account\"}}/>\n\t\t\t\t\t<NavBar onClick={openExpenseModalHandler} key=\"add-expense\" link={currLocation} account={{id:\"add-expense\", name:\"Add Expense\"}}/>\n\t\t\t\t\t<NavBar onClick={() => navigateHandler(\"/\")} key=\"all_accounts\" link=\"/\" account={{id:\"all_accounts\", name:\"all accounts\"}}/>\n\t\t\t\t</div>\n\t\t\t</Card>\n\n\t\t\t{\n\t\t\t\t(accounts.length > 0 ) &&\n\t\t\t\t\taccounts.map(account => (\n\t\t\t\t\t\t<NavBar onClick={() => navigateHandler(\"/AccountStatement/\" + account.id)} key={account.id} link={\"/AccountStatement/\" + account.id} account={account}/>\n\t\t\t\t\t))\n\t\t\t}\n\t\t\t<Outlet/>\n\t\t</>\n\t)\n}\n\nexport default ListAccounts;",["173","174"],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/auth-context.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AccountStatement.js",["175"],"import React,{ useMemo, useState } from 'react';\nimport Card from '../UI/Card';\nimport { useParams} from 'react-router-dom';\nimport Report from './Report';\nimport FilterReport from './FilterReport';\n\nfunction AccountStatement(props)\t{\n\tconst params = useParams();\n  \tconst { accountId } = params;\n\n  \tconst [filterData, setFilterData] = useState({});\n  \tconst onFilterExpensesHandler = (date, price) => {\n  \t\tsetFilterData({date: date, price: price});\n  \t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<FilterReport onFilterExpenses = {onFilterExpensesHandler}/>\n\t\t\t<Report accountId={accountId} filterData = {filterData} />\n\t\t</Card>\n\t)\n}\n\nexport default AccountStatement;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Header/NavBar.js",["176","177","178"],"import React from 'react';\nimport classes from './NavBar.module.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  NavLink,\n  useLocation,\n} from \"react-router-dom\";\nfunction NavBar(props)\t{\n\tlet location = useLocation();\n\tconst currLocation = location.pathname;\n\treturn (\n\t\t<>\n\t\t\t{ props.account.name !== 'all accounts' && !(currLocation.includes('AccountStatement')) && \t \n\t\t\t\t<div onClick={props.onClick} key={props.account.id} className={`${(props.account.name !== 'Logout' && props.account.name !== 'Add Expense') ?  classes.account : classes.all_accounts_div } `} >\n\t\t\t\t\t<NavLink onClick={props.onClick} key={props.account.id} to={props.link}>{props.account.name}</NavLink>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{ (currLocation.includes('AccountStatement')) && (props.account.name === 'Add Expense' || props.account.name === 'all accounts' || props.account.name === 'Logout') && \t \n\t\t\t\t<div onClick={props.onClick} className={classes.all_accounts_div}>\n\t\t\t\t\t<NavLink onClick={props.onClick} key=\"all_accounts_link\" to={props.link}>{props.account.name}</NavLink>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default NavBar;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/Report.js",["179","180","181","182","183","184","185","186"],"import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ReportEntry from './ReportEntry';\nimport classes from './Report.module.css';\nimport useGetData from '../../Hooks/useGetData';\nimport ReportContext from '../Store/report-context';\n\n\nfunction Report(props)\t{\n\t\n\tconst ctxRep = useContext(ReportContext);\n\tconst { expensesUpdated } = ctxRep;\n  \tconst loadedExpenses = [];\n\tconst [expenses, setExpenses] = useState([]);\n\tconst allKeys = ['Price', 'description', 'ItemDate'];\n\tconst { alldata,fetchDataHandler: getExpenses } = useGetData(allKeys);\n\tconst fetchExpenses = (allExpenses) => {\n\t\tconst loadedExpenses = [];\n\n\t      for (const expenseKey in allExpenses) {\n\t      \tvar d = new Date(allExpenses[expenseKey][\"ItemDate\"]);\n              let month = d.getMonth()+1;\n              let day = d.getUTCDate();\n              let year = d.getFullYear();\n\t        loadedExpenses.push({ day: day, month: month, year: year, \"Price\": allExpenses[expenseKey][\"Price\"],\n\t        \t \"description\": allExpenses[expenseKey][\"description\"] });\n\t      }\n\t      setExpenses(loadedExpenses);\n    }\n  useEffect(() => {\n  \t\tif(typeof expensesUpdated.day !== \"undefined\"){\n  \t\t\tsetExpenses(expenses.concat(expensesUpdated));\n  \t\t}else{\n\t\t\tgetExpenses(`https://expensetracker-706b7-default-rtdb.firebaseio.com/expense/${props.accountId}.json`,\"\", fetchExpenses);\n  \t\t}\n  \treturn () => {\n      setExpenses([]); // This worked for me\n    };\n  },[getExpenses, expensesUpdated])\n\n  useEffect(()=> {\n  \t\tctxRep.onExpensesUpdate({});\n  },[]);\n\n  useEffect(()=> {\n  \t\tconst filteredExpenses = expenses.filter(function(expense) {\n\n\t\t  return  parseInt(props.filterData.price) === parseInt(expense.Price);\n\t\t});\n\t\tsetExpenses(filteredExpenses);\n  },[props.filterData]);\n\n  \n\n\t\n\n\t// console.log(expenses);\n\tconst accId = props.accountId;\n\tlet midArr = [];\n\tif(expenses.length > 0){\n\t\texpenses.map(function(items,i){\n\t\t\t// if(accId == i){\n\t\t\t\tmidArr.push(items);\n\t\t\t// }\n\t\t\t// if(accId-1 == i)\n\t\t\t// {\n\t\t\t// \titems.map(function(item,j){\n\t\t\t// \t\tmidArr.push(item);\n\t\t\t// \t})\n\n\t\t\t// }\n\t\t})\n\t}\n\treturn (\n\t\t<ul className={classes['expenses-list']}>\n\t\t{\n\t\t\t midArr.length > 0 &&midArr.map(single => (\n\t\t\t\t\t<ReportEntry key={Math.random()} reportData={single}/> \n\t\t\t\t))\n\t\t}\n\n\t\t</ul>\n\t)\n}\n\nexport default Report;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/ReportEntry.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/UI/Modal.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AddExpense.js",["187"],"import React, { useState, useContext } from 'react';\nimport classes from './AddExpense.module.css';\nimport ReportContext from '../Store/report-context';\nimport useGetData from '../../Hooks/useGetData';\n\n\n\nfunction AddExpense(props)\t{\nconst ctxRep =  useContext(ReportContext);\nconst allKeys = ['description', 'Price', 'day', 'month', 'year'];\nconst {alldata, fetchDataHandler: addExpense} = useGetData(allKeys);\n\n const addExpenseHandler = async (expense) => {\n \tconst id = props.id.trim() !== \"\" ? props.id : userInput.accountid;\n\tlet d = new Date(userInput.date);\n\t\n\tconst expenseDataCtx = {\n\t\t\"description\": userInput.description,\n\t\t\"Price\": userInput.price,\n\t\t\"day\": d.getUTCDate(),\n\t\t\"month\": d.getMonth()+1,\n\t\t\"year\": d.getFullYear(),\n\t};\n\tconst saveData=(data)=>{\n\t\tconsole.log(data);\n\t}\n\tconst addExpenseWrapper = async() => {\n\tawait\taddExpense(`https://expensetracker-706b7-default-rtdb.firebaseio.com/expense/${id}.json`, {\n\t\t  method: 'POST',\n\t\t  body: JSON.stringify(expense),\n\t\t  headers: {\n\t\t    'Content-Type': 'application/json'\n\t\t  }\n\t\t},saveData);\n\tawait ctxRep.onExpensesUpdate(expenseDataCtx);\n\n\t}\n\taddExpenseWrapper();\n\t// const response = await fetch(`https://expensetracker-706b7-default-rtdb.firebaseio.com/expense/${id}.json`, {\n\t//   method: 'POST',\n\t//   body: JSON.stringify(expense),\n\t//   headers: {\n\t//     'Content-Type': 'application/json'\n\t//   }\n\t// });\n\t// const data = await response.json();\n\t\n}\n\n\nconst [userInput, setUserInput] = useState({\n\tdescription: '',\n\tprice: '',\n\tdate: '',\n\taccountid: '',\n});\n\nconst descriptionChangeHandler = (e) => {\n\n\tsetUserInput((prevState)  => {\n\t\treturn {...prevState, description: e.target.value}\n\t});\n\n}\n\nconst priceChangeHandler = (e) => {\n\n\tsetUserInput((prevState)  => {\n\t\treturn {...prevState, price: e.target.value}\n\t});\n\t\n}\n\nconst dateChangeHandler = (e) => {\n\n\tsetUserInput((prevState)  => {\n\t\treturn {...prevState, date: e.target.value}\n\t});\n\t\n}\nconst accountChangeHandler = (e) => {\n\n\tsetUserInput((prevState)  => {\n\t\treturn {...prevState, accountid: e.target.value}\n\t});\n\t\n}\n\nconst submitHandler = (e) => {\n\te.preventDefault();\n\n\tconst expenseData = {\n\t\t\"description\": userInput.description,\n\t\t\"Price\": userInput.price,\n\t\t\"ItemDate\": new Date(userInput.date),\n\t};\n\t\n\taddExpenseHandler(expenseData);\n\tsetUserInput({\n\t\tdescription: '',\n\t\tprice: '',\n\t\tdate: '',\n\t\taccountid: '',\n\t});\n\tprops.onCancel();\n\t\n\n}\n\treturn (\n\t\t<div className={classes['new-expense']}>\n\t\t\t<form onSubmit = {submitHandler}>\n\t\t\t\t<div className={classes['new-expense__controls']}>\n\t\t\t\t\t{props.id.trim() === \"\" && \n\t\t\t\t\t<div className={classes['new-expense__control']}>\n\t\t\t\t\t\t<label>Select Account</label>\n\t\t\t\t\t\t<select onChange={accountChangeHandler}>\n\t\t\t\t\t\t{props.accounts.map(account => (\n\t\t\t\t\t\t\t<option key={account.id} value={account.id}>{account.name}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div className={classes['new-expense__control']}>\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<input onChange={descriptionChangeHandler} type=\"text\" value={userInput.description}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes['new-expense__control']}>\n\t\t\t\t\t\t<label>price</label>\n\t\t\t\t\t\t<input onChange={priceChangeHandler} type=\"number\" min=\"0.01\" step=\"0.01\" value={userInput.price}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes['new-expense__control']}>\n\t\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t\t<input onChange={dateChangeHandler} type=\"date\" min=\"2018-01-01\" step=\"2022-12-31\" value={userInput.date}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes['new-expense__actions']}>\n\t\t\t\t\t<button onClick={props.onCancel} type=\"button\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t\tAdd Expense\n\t\t\t\t\t</button>\n\t\t\t\t</div>\t\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default AddExpense;","/home/syed/reactProjects/training/xprolabs/account-system/src/Hooks/useGetData.js",["188","189","190","191"],"import React, { useState, useEffect, useCallback } from 'react';\nimport ReportContext from '../Components/Store/report-context';\n\nfunction useGetData( allKeys, dataDepend = \"\")\t{\n    const [alldata, setAlldata] = useState([]);\n    const fetchDataHandler = useCallback(async (url, config=\"\", applyData) => {\n    try {\n        let response=\"\";\n        if(config !== \"\"){\n            response = await fetch(url,config);\n        }\n        else\n        {\n            response = await fetch(url);\n        }\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n    const data = await response.json();\n    applyData(data);\n     //  const allInnerData = [];\n     //  for (const key in data) {\n  \t\t\t// var obj = Object.create({});\n     //  \t\tfor (const singleKey of allKeys) {\n     //        if (singleKey == 'ItemDate'){\n     //          var d = new Date(data[key][singleKey]);\n     //          obj['month'] = d.getMonth()+1;\n     //          obj['day'] = d.getUTCDate();\n     //          obj['year'] = d.getFullYear();\n     //        }else{\n     //  \t\t    obj[singleKey] = data[key][singleKey];\n     //        }\n     //      }\n\t    //     allInnerData.push(obj);\n     //  }\n     //  if(config !== \"\")\n     //    {\n     //        return;\n     //    }\n     //    setAlldata(allInnerData);\n    } catch (error) {\n      console.log(error);\n    }\n  },[])\n\n\t// useEffect(() => {\n\t//     fetchDataHandler();\n //        return () => {\n //            setAlldata([]); // This worked for me\n //            };\n //        }, [dataDepend]);\n\n    return {alldata, dataDepend, fetchDataHandler};\n}\n\nexport default useGetData;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/report-context.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Store/account-context.js",[],"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/AddAccount.js",["192"],"import React, { useState, useContext } from 'react';\nimport classes from './AddAccount.module.css';\nimport AccountContext from '../Store/account-context';\nimport useGetData from '../../Hooks/useGetData';\n\n\n\nfunction AddAccount(props)\t{\nconst ctxAcc =  useContext(AccountContext);\nconst allKeys = [\"id\", 'name'];\nconst {alldata, fetchDataHandler: addAccount} = useGetData(allKeys);\n\n const addAccountHandler = async (account) => {\n\tconst accountDataCtx = {\n\t\t\"id\": account.id,\n\t\t\"name\": accountname\n\t};\n\tconst saveData = (data) => {\n\t\t// console.log(data);\n\t}\n\tconst addAccountWrapper = async() => {\n\tawait\taddAccount(`https://expensetracker-706b7-default-rtdb.firebaseio.com/accounts.json`, {\n\t\t  method: 'POST',\n\t\t  body: JSON.stringify(account),\n\t\t  headers: {\n\t\t    'Content-Type': 'application/json'\n\t\t  }\n\t\t},saveData);\n\tawait ctxAcc.onAccountsUpdate(accountDataCtx);\n\n\t}\n\taddAccountWrapper();\n\t\n}\n\n\nconst [accountname, setAccountname] = useState('');\n\nconst accountnameChangeHandler = (e) => {\n\n\tsetAccountname(e.target.value);\n\n}\n\nfunction randomInteger(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst submitHandler = (e) => {\n\te.preventDefault();\n\n\tconst accountData = {\n\t\t\"id\": randomInteger(1,100),\n\t\t\"name\": accountname\n\t};\n\t\n\taddAccountHandler(accountData);\n\tsetAccountname('');\n\tprops.onCancel();\n\t\n\n}\n\treturn (\n\t\t<div className={classes['new-account']}>\n\t\t\t<form onSubmit = {submitHandler}>\n\t\t\t\t<div className={classes['new-account__controls']}>\n\t\t\t\t\t<div className={classes['new-account__control']}>\n\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t<input onChange={accountnameChangeHandler} type=\"text\" value={accountname}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes['new-account__actions']}>\n\t\t\t\t\t<button onClick={props.onCancel} type=\"button\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t\tAdd Account\n\t\t\t\t\t</button>\n\t\t\t\t</div>\t\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default AddAccount;","/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Accounts/FilterReport.js",["193"],"import React, { useRef, useReducer } from 'react';\nimport Card from '../UI/Card';\nimport classes from './FilterReport.module.css';\n\nconst filterReducer = (state, action) => {\n\n\tif (action.type == 'VALIDATE_FILTER') {\n\t\tlet currThisDate = new Date();\n\t\tlet currDate =  currThisDate.toISOString().split('T')[0];\n\n\t\tlet actionDate = action.filterDate.trim();\n\t\tlet actionPrice = action.filterPrice.trim();\n\t\t\n\t\tif (actionDate !== \"\" && actionPrice !== \"\")\n\t\t{\n\t\t\tif ((actionDate !== currDate) && (actionPrice > 0)) {\n\t\t\t\treturn {\n\t\t\t\t\tfilterDate: action.filterDate, filterPrice: state.filterPrice,\n\t\t\t\t\t filterValid: true, error: false, errorMessage: ''\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (actionPrice < 0 ){\n\t\t\t\t\treturn {\n\t\t\t\t\t\terror: true, errorMessage: 'Price can not be negative number'\n\t\t\t\t\t}\t\n\t\t\t\t}\t\n\t\t\t\tif ((actionDate === currDate)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t filterValid: false, error: true, errorMessage: 'Date cannot be current date'\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tif (actionDate === '' && actionPrice === ''){\n\t\t\t\treturn {\n\t\t\t\t\tfilterValid: false, error: true, errorMessage: 'Enter Date or Price to continue'\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif (actionPrice < 0 ){\n\t\t\t\treturn {\n\t\t\t\t\tfilterValid: false, error: true, errorMessage: 'Price can not be negative number'\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif ((actionDate === currDate)) {\n\t\t\t\treturn {\n\t\t\t\t\t filterValid: false, error: true, errorMessage: 'Date cannot be current date'\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\treturn {\n\t\t\tfilterDate : \"\", filterPrice: \"\", filterValid: true, error: false, errorMessage:''\n\t\t};\n\n}\n\nfunction FilterReport(props)\t{\n\tconst priceRef = useRef();\n\tconst dateRef = useRef();\n\t\n\tconst filterChangeHandler = () => {\n\t\tdispatch({type: \"VALIDATE_FILTER\", filterDate: dateRef.current.value, filterPrice: priceRef.current.value})\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch({type: \"VALIDATE_FILTER\", filterDate: dateRef.current.value, filterPrice: priceRef.current.value})\n\t\tif (filterState.filterValid)\n\t\t{\n\t\t\tprops.onFilterExpenses(dateRef.current.value, priceRef.current.value);\n\t\t}\n\t}\n\n\tconst InitialFilter = {filterDate : Date.now(), filterPrice: \"\", filterValid: false, error: false, errorMessage:''};\n\tconst [filterState, dispatch] =  useReducer(filterReducer, InitialFilter);\n\t\n\treturn (\n\t\t<Card>\n\t\t\t<div className={classes['new-filter']}>\n\t\t\t\t<form onSubmit = {submitHandler}>\n\t\t\t\t\t{filterState.error && <p className={classes.error}>{filterState.errorMessage}</p>}\n\t\t\t\t\t<div className={classes['new-filter__controls']}>\n\t\t\t\t\t\t<div className={classes['new-filter__control']}>\n\t\t\t\t\t\t\t<label>Filter By Date</label>\n\t\t\t\t\t\t\t<input ref={dateRef} onChange={filterChangeHandler} type=\"date\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes['new-filter__controls']}>\n\t\t\t\t\t\t<div className={classes['new-filter__control']}>\n\t\t\t\t\t\t\t<label>Filter By Price</label>\n\t\t\t\t\t\t\t<input ref={priceRef} onChange={filterChangeHandler} type=\"text\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes['new-filter__actions']}>\n\t\t\t\t\t\t<button  type=\"submit\">\n\t\t\t\t\t\t\tFilter\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\t\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nexport default FilterReport;",["194","195"],{"ruleId":"196","severity":1,"message":"197","line":9,"column":20,"nodeType":"198","messageId":"199","endLine":9,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":12,"column":3,"nodeType":"198","messageId":"199","endLine":12,"endColumn":10},{"ruleId":"196","severity":1,"message":"201","line":13,"column":3,"nodeType":"198","messageId":"199","endLine":13,"endColumn":14},{"ruleId":"196","severity":1,"message":"202","line":14,"column":3,"nodeType":"198","messageId":"199","endLine":14,"endColumn":14},{"ruleId":"196","severity":1,"message":"203","line":15,"column":3,"nodeType":"198","messageId":"199","endLine":15,"endColumn":11},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":9,"column":18,"nodeType":"210","messageId":"211","endLine":9,"endColumn":20},{"ruleId":"196","severity":1,"message":"212","line":44,"column":9,"nodeType":"198","messageId":"199","endLine":44,"endColumn":18},{"ruleId":"196","severity":1,"message":"213","line":44,"column":20,"nodeType":"198","messageId":"199","endLine":44,"endColumn":32},{"ruleId":"196","severity":1,"message":"214","line":46,"column":9,"nodeType":"198","messageId":"199","endLine":46,"endColumn":16},{"ruleId":"196","severity":1,"message":"215","line":46,"column":18,"nodeType":"198","messageId":"199","endLine":46,"endColumn":28},{"ruleId":"196","severity":1,"message":"216","line":1,"column":37,"nodeType":"198","messageId":"199","endLine":1,"endColumn":48},{"ruleId":"196","severity":1,"message":"217","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":24},{"ruleId":"196","severity":1,"message":"197","line":11,"column":20,"nodeType":"198","messageId":"199","endLine":11,"endColumn":26},{"ruleId":"196","severity":1,"message":"218","line":12,"column":3,"nodeType":"198","messageId":"199","endLine":12,"endColumn":9},{"ruleId":"196","severity":1,"message":"219","line":13,"column":3,"nodeType":"198","messageId":"199","endLine":13,"endColumn":8},{"ruleId":"196","severity":1,"message":"200","line":14,"column":3,"nodeType":"198","messageId":"199","endLine":14,"endColumn":10},{"ruleId":"196","severity":1,"message":"203","line":17,"column":3,"nodeType":"198","messageId":"199","endLine":17,"endColumn":11},{"ruleId":"196","severity":1,"message":"214","line":62,"column":12,"nodeType":"198","messageId":"199","endLine":62,"endColumn":19},{"ruleId":"220","severity":1,"message":"221","line":83,"column":7,"nodeType":"222","endLine":83,"endColumn":37,"suggestions":"223"},{"ruleId":"204","replacedBy":"224"},{"ruleId":"206","replacedBy":"225"},{"ruleId":"196","severity":1,"message":"226","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":4,"column":20,"nodeType":"198","messageId":"199","endLine":4,"endColumn":26},{"ruleId":"196","severity":1,"message":"218","line":5,"column":3,"nodeType":"198","messageId":"199","endLine":5,"endColumn":9},{"ruleId":"196","severity":1,"message":"219","line":6,"column":3,"nodeType":"198","messageId":"199","endLine":6,"endColumn":8},{"ruleId":"196","severity":1,"message":"216","line":1,"column":38,"nodeType":"198","messageId":"199","endLine":1,"endColumn":49},{"ruleId":"196","severity":1,"message":"227","line":12,"column":10,"nodeType":"198","messageId":"199","endLine":12,"endColumn":24},{"ruleId":"196","severity":1,"message":"214","line":15,"column":10,"nodeType":"198","messageId":"199","endLine":15,"endColumn":17},{"ruleId":"220","severity":1,"message":"228","line":38,"column":5,"nodeType":"222","endLine":38,"endColumn":35,"suggestions":"229"},{"ruleId":"220","severity":1,"message":"230","line":42,"column":5,"nodeType":"222","endLine":42,"endColumn":7,"suggestions":"231"},{"ruleId":"220","severity":1,"message":"232","line":50,"column":5,"nodeType":"222","endLine":50,"endColumn":23,"suggestions":"233"},{"ruleId":"196","severity":1,"message":"234","line":57,"column":8,"nodeType":"198","messageId":"199","endLine":57,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":60,"column":16,"nodeType":"237","messageId":"238","endLine":60,"endColumn":24},{"ruleId":"196","severity":1,"message":"214","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":15},{"ruleId":"196","severity":1,"message":"239","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"240","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"241","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"242","line":5,"column":21,"nodeType":"198","messageId":"199","endLine":5,"endColumn":31},{"ruleId":"196","severity":1,"message":"214","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":7,"column":18,"nodeType":"210","messageId":"211","endLine":7,"endColumn":20},{"ruleId":"204","replacedBy":"243"},{"ruleId":"206","replacedBy":"244"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useLocation' is defined but never used.","'useNavigate' is defined but never used.","'Navigate' is defined but never used.","no-native-reassign",["245"],"no-negated-in-lhs",["246"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'localuser' is assigned a value but never used.","'setLocaluser' is assigned a value but never used.","'alldata' is assigned a value but never used.","'dataDepend' is assigned a value but never used.","'useCallback' is defined but never used.","'AccountStatement' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accounts'. Either include it or remove the dependency array. You can also do a functional update 'setAccounts(a => ...)' if you only need 'accounts' in the 'setAccounts' call.","ArrayExpression",["247"],["245"],["246"],"'useMemo' is defined but never used.","'loadedExpenses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expenses' and 'props.accountId'. Either include them or remove the dependency array. You can also do a functional update 'setExpenses(e => ...)' if you only need 'expenses' in the 'setExpenses' call.",["248"],"React Hook useEffect has a missing dependency: 'ctxRep'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'expenses'. Either include it or remove the dependency array.",["250"],"'accId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'React' is defined but never used.","'useEffect' is defined but never used.","'ReportContext' is defined but never used.","'setAlldata' is assigned a value but never used.",["245"],["246"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [getAccounts, accountsUpdated, accounts]",{"range":"259","text":"260"},"Update the dependencies array to be: [getExpenses, expensesUpdated, expenses, props.accountId]",{"range":"261","text":"262"},"Update the dependencies array to be: [ctxRep]",{"range":"263","text":"264"},"Update the dependencies array to be: [expenses, props.filterData]",{"range":"265","text":"266"},[2280,2310],"[getAccounts, accountsUpdated, accounts]",[1453,1483],"[getExpenses, expensesUpdated, expenses, props.accountId]",[1542,1544],"[ctxRep]",[1750,1768],"[expenses, props.filterData]"]