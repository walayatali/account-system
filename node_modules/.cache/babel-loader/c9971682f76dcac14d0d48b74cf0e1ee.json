{"ast":null,"code":"var _jsxFileName = \"/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useReducer, useContext } from 'react';\nimport classes from './LoginForm.module.css';\nimport Input from '../UI/Input';\nimport AuthContext from '../Store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst authReducer = (state, action) => {\n  if (action.type == 'FORM_VALIDATE') {\n    if (action.email.trim() === \"\") {\n      console.log(\"email heere\");\n      return {\n        email: state.email,\n        password: state.password,\n        valid: false\n      };\n    }\n\n    if (action.password.trim() === \"\") {\n      console.log(\"password heere\");\n      return {\n        email: state.email,\n        password: state.password,\n        valid: false\n      };\n    } else {\n      return {\n        email: action.email,\n        password: action.password,\n        valid: true\n      };\n    }\n  } else {\n    return {\n      email: '',\n      password: '',\n      valid: false\n    };\n  }\n};\n\nfunction LoginForm(props) {\n  _s();\n\n  const InitialUser = {\n    email: '',\n    password: '',\n    valid: false\n  };\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [authState, dispatch] = useReducer(authReducer, InitialUser);\n  const ctxAuth = useContext(AuthContext);\n\n  const changeFormHandler = () => {\n    dispatch({\n      type: \"FORM_VALIDATE\",\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (emailRef.current.value !== '') {\n      console.log(\"updated state\" + authState.email);\n      ctxAuth.onSetUser(emailRef.current.value, passwordRef.current.value);\n    }\n  };\n\n  useEffect(() => {\n    emailRef.current.focus();\n    console.log(\"focusing\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Email\",\n      ref: emailRef,\n      input: {\n        type: \"email\",\n        onChange: changeFormHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Password\",\n      ref: passwordRef,\n      input: {\n        type: \"password\",\n        onChange: changeFormHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: authState.valid,\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginForm, \"rfgXo6UyW47+ti8G3A5iCK+xSBg=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/syed/reactProjects/training/xprolabs/account-system/src/Components/Auth/LoginForm.js"],"names":["React","useRef","useEffect","useReducer","useContext","classes","Input","AuthContext","authReducer","state","action","type","email","trim","console","log","password","valid","LoginForm","props","InitialUser","emailRef","passwordRef","authState","dispatch","ctxAuth","changeFormHandler","current","value","submitHandler","e","preventDefault","onSetUser","focus","onChange"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useReducer, useContext} from 'react';\nimport classes from './LoginForm.module.css';\nimport Input from '../UI/Input';\nimport AuthContext from '../Store/auth-context';\n\nconst authReducer = (state, action) => {\n\t\n\tif (action.type == 'FORM_VALIDATE') {\n\t\tif (action.email.trim() === \"\")\n\t\t{\n\t\t\tconsole.log(\"email heere\");\n\t\t\treturn {\n\t\t\t\temail: state.email, password: state.password, valid:false\n\t\t\t}\t\n\t\t}\n\t\tif (action.password.trim() === \"\")\n\t\t{\n\t\t\tconsole.log(\"password heere\");\n\t\t\treturn {\n\t\t\t\temail: state.email, password: state.password, valid:false\n\t\t\t}\t\n\t\t}\n\t\telse{\n\n\t\t\treturn { email: action.email, password: action.password, valid: true }\t\t\n\t\t}\n\t} else {\n\t\treturn { email: '', password: '', valid:false }\n\t}\n\n}\n\nfunction LoginForm (props)\t{\n\n\tconst InitialUser = {email: '', password: '', valid: false};\n\n\tconst emailRef = useRef();\n\tconst passwordRef = useRef();\n\t\n\tconst [authState, dispatch] =  useReducer(authReducer, InitialUser);\n\tconst ctxAuth =  useContext(AuthContext);\n\n\tconst changeFormHandler = () => {\n\t\tdispatch({type:\"FORM_VALIDATE\", email: emailRef.current.value, password: passwordRef.current.value })\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\t\n\t\tif( emailRef.current.value !== '' )\n\t\t{\n\t\t\tconsole.log(\"updated state\"+ authState.email);\n\t\t\tctxAuth.onSetUser(emailRef.current.value, passwordRef.current.value)  \n\t\t}\n\t}\n\t\n\tuseEffect (() => {\n\t\temailRef.current.focus();\n\t\tconsole.log(\"focusing\");\n\t}, []);\n\n\treturn (\n\t\t<form  onSubmit={submitHandler}>\n\t\t\t<Input  label=\"Email\" ref={emailRef} input={{\n\t\t\t\ttype: \"email\",\n\t\t\t\tonChange: changeFormHandler,\n\t\t\t}}/>\n\t\t\t<Input label=\"Password\" ref={passwordRef} input={{\n\t\t\t\ttype: \"password\",\n\t\t\t\tonChange: changeFormHandler\n\t\t\t}}/>\n\t\t\t<button disabled={authState.valid} type=\"submit\">Login</button>\n\t\t</form>\n\t)\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}